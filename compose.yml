services:
  # Development service - used for active development with hot reloading
  app:
    build: 
      context: .
      target: dev
    user: "1000:1000" # Using fixed user ID instead of variables for stability
    ports:
      - "80:80"
    env_file:
      - .env
    volumes:
      - .:/usr/src/myapp:z
      - ./.cargo-cache:/usr/local/cargo/registry:z
      - ./.rustup-cache:/usr/local/rustup:z
    depends_on:
      mysql:
        condition: service_healthy
    # Available in the default profile for easier development
    profiles: ["default", "dev"]

  # Production service - optimized for performance and security
  app_prod:
    build:
      context: .
      target: production
    ports:
      - "80:80"
    env_file:
      - .env
    # No volumes needed in production
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    # Use specific profile to enable this service only in production
    profiles: ["prod"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 256M
    read_only: true
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

  mysql:
    image: mysql:8.0
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - ./.mysql-data:/var/lib/mysql:z
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 5s
      start_period: 30s

  # Nginx service for reverse proxy, SSL termination, and static file serving
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/www:/usr/share/nginx/html:ro
    depends_on:
      - app_prod
    profiles: ["prod"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

